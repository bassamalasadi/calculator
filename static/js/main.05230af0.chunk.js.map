{"version":3,"sources":["spacef.js","App.js","index.js"],"names":["module","exports","val","isNaN","toString","trim","isNumeric","parts","split","replace","join","App","useState","value","setValue","memory","setMemory","operator","setOperator","mem","setMem","mrStyle","backgroundColor","handleButtonPress","content","parseFloat","Math","pow","length","includes","className","spacef","onClick","Number","style","exp","sqrt","textDecoration","cbrt","log","log10","sin","cos","tan","E","sinh","cosh","tanh","PI","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05230af0.chunk.js","sourcesContent":[";(function () {\r\n    function isNumeric (val) {\r\n      if (typeof val === 'number' && !isNaN(val)) {\r\n        return true\r\n      }\r\n  \r\n      val = (val || '').toString().trim()\r\n      return val && !isNaN(val)\r\n    }\r\n  \r\n    function spacef (val) {\r\n      if (typeof val === 'undefined' || val === null) {\r\n        val = ''\r\n      }\r\n  \r\n      val = val.toString()\r\n  \r\n      if (!isNumeric(val)) {\r\n        return val\r\n      }\r\n  \r\n      var parts = val.split('.')\r\n  \r\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n      return parts.join('.')\r\n    }\r\n  \r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n      module.exports = spacef\r\n    } \r\n  })();\r\n  ","import React, {memo, useState} from 'react'\nimport spacef from './spacef'\nimport './App.css';\n\nfunction App() {\n  const [value , setValue] = useState(\"0\")\n  const [memory, setMemory] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [mem , setMem] = useState(null)\n\n  let mrStyle = {}\n  if(mem !== null){\n    mrStyle = {\n      backgroundColor: \"#666666\"\n    }\n  }\n  const handleButtonPress = (content) => {\n    if(content === \"mr\"){\n      if(mem !== null){\n        setValue((mem).toString())\n        return;\n      }\n    }\n    if(content === \"AC\"){\n      setValue(\"0\");\n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if (content === \".\") {\n      if (value.includes(\".\")) return;\n      setValue(value + \".\");\n      return;\n    }\n\n    if (content === \"+\" || content === \"−\" || content === \"x\" ||\n        content === \"÷\" || content === \"xy\" || content === \"sqrX\" ||\n        content === \"EE\" ) {\n      if (operator !== null) {\n        if (operator === \"+\") {\n          setMemory(memory + parseFloat(value));\n        } else if (operator === \"−\") {\n          setMemory(memory - parseFloat(value));\n        } else if (operator === \"x\") {\n          setMemory(memory * parseFloat(value));\n        } else if (operator === \"÷\") {\n          setMemory(memory / parseFloat(value));\n        } else if (operator === \"xy\"){\n          setMemory(memory ** parseFloat(value));\n        } else if (operator === \"sqrX\"){\n          setMemory(memory ** (1 / parseFloat(value)));\n        } else if (operator === \"EE\"){\n          setMemory(memory * (10 ** parseFloat(value)));\n        } else if(operator === \"m+\"){\n          setMem(mem + parseFloat(value));setValue('0');\n        } else if(operator === \"m-\"){\n          setMem(mem - parseFloat(value).toString())\n        }\n      } else {\n        setMemory(parseFloat(value));\n      }\n\n      setValue(\"0\");\n      setOperator(content);\n      return;\n    }\n\n    if (content === \"=\") {\n      if (!operator) return;\n      if (operator === \"+\") {\n        setValue((memory + parseFloat(value)).toString());\n      } else if (operator === \"−\") {\n        setValue((memory - parseFloat(value)).toString());\n      } else if (operator === \"x\") {\n        setValue((memory * parseFloat(value)).toString());\n      } else if (operator === \"÷\") {\n        setValue((memory / parseFloat(value)).toString());\n      } else if(operator === \"xy\"){\n        setValue((memory ** parseFloat(value).toString()))\n      } else if(operator === \"sqrX\"){\n        setValue((Math.pow(memory, (1/parseFloat(value)).toString())))\n      } else if(operator === \"EE\"){\n        setValue(memory * (10 ** parseFloat(value)).toString())\n      } else \n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n\n    if (value[value.length - 1] === \".\") {\n      setValue(value + content);\n    } else if(value?.includes('.')){\n      setValue((value + content).toString())\n    }else{\n      setValue(parseFloat(value + content).toString());\n    }\n    if(content === \"\")return;\n    }\n\n  return (\n    <div className=\"App\">\n      <div className=\"calcultor\">\n        <div className=\"number\">\n          <p>{spacef(value)}</p>\n        </div>\n        <div className=\"numbers\">\n          <div  className=\"line\">\n          <button className=\"gray2Color\" >(</button>    \n          <button className=\"gray2Color\" >)</button>    \n          <button className=\"gray2Color\" onClick={() => {setValue('0');setMem(null)}}>mc</button>     \n          <button className=\"gray2Color\" onClick={() => {setMem(mem + Number(value));setValue('0')}}>m+</button>       \n          <button className=\"gray2Color\" onClick={() => {setMem(mem - Number(value));setValue('0')}}>m-</button>     \n          <button className=\"gray2Color\" style={mrStyle} onClick={() => handleButtonPress('mr')}>mr</button>    \n          <button className=\"grayColor\" onClick={() => handleButtonPress('AC')}>AC</button>                           \n          <button className=\"grayColor\" onClick={() => setValue((parseFloat(value) * -1).toString())}>±</button>      \n          <button className=\"grayColor\" onClick={() => setValue((parseFloat(value) / 100).toString())}>%</button>     \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('÷')}>÷</button>                           \n          </div>\n          <div className=\"line\">\n          <button className=\"gray2Color\">2<sup>nd</sup></button>                                                    \n          <button className=\"gray2Color\" onClick={() => setValue(value ** 2)}>x<sup>2</sup></button>  \n          <button className=\"gray2Color\" onClick={() => setValue(value ** 3)}>x<sup>3</sup></button>  \n          <button className=\"gray2Color\" onClick={() => handleButtonPress('xy')}>x<sup>y</sup></button>       \n          <button className=\"gray2Color\" onClick={() => setValue(Math.exp(value))}>e<sup>x</sup></button>     \n          <button className=\"gray2Color\" onClick={() => setValue(10 ** value)}>10<sup>x</sup></button>\n          <button className=\"gray1Color\" onClick={() => handleButtonPress('7')}>7</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('8')}>8</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('9')}>9</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('x')}>x</button>           \n          </div>\n          <div className=\"line\">\n          <button className=\"gray2Color\" onClick={() => setValue(1 / value)}>1/x</button>             \n          <button className=\"gray2Color\" onClick={() => setValue(Math.sqrt(value))}><sup>2</sup> &radic;<span style={{textDecoration: \"overline\"}}>x</span></button>\n          <button className=\"gray2Color\" onClick={() => setValue(Math.cbrt(value))}><sup>3</sup> &radic;<span style={{textDecoration: \"overline\"}}>x</span></button>\n          <button className=\"gray2Color\" onClick={() => handleButtonPress('sqrX')}><sup>y</sup> &radic;<span style={{textDecoration: \"overline\"}}>x</span></button>\n          <button className=\"gray2Color\" onClick={() => setValue(Math.log(value))}>In</button>        \n          <button className=\"gray2Color\" onClick={() => setValue(Math.log10(value))}>Iog<sup>10</sup></button>\n          <button className=\"gray1Color\" onClick={() => handleButtonPress('4')}>4</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('5')}>5</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('6')}>6</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('−')}>−</button>           \n          </div>\n          <div className=\"line\">\n          <button className=\"gray2Color\">x!</button>                   \n          <button className=\"gray2Color\" onClick={() => setValue(Math.sin(value))}>sin</button>       \n          <button className=\"gray2Color\" onClick={() => setValue(Math.cos(value))}>cos</button>       \n          <button className=\"gray2Color\" onClick={() => setValue(Math.tan(value))}>tan</button>       \n          <button className=\"gray2Color\" onClick={() => setValue(Math.E)}>e</button>                  \n          <button className=\"gray2Color\" onClick={() => handleButtonPress('EE')}>EE</button>          \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('1')}>1</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('2')}>2</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('3')}>3</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('+')}>+</button>           \n          </div>\n          <div className=\"line\">\n          <button className=\"gray2Color\">Rad</button>\n          <button className=\"gray2Color\" onClick={() => setValue(Math.sinh(value))}>sinh</button>     \n          <button className=\"gray2Color\" onClick={() => setValue(Math.cosh(value))}>cosh</button>     \n          <button className=\"gray2Color\" onClick={() => setValue(Math.tanh(value))}>tanh</button>     \n          <button className=\"gray2Color\" onClick={() => setValue(Math.PI)}>&pi;</button>              \n          <button className=\"gray2Color\" onClick={() => setValue(Math.random())}>Rand</button>        \n          <button className=\"gray1Color zero\" onClick={() => handleButtonPress('0')}>0</button>       \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('.')}>.</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('=')}>=</button>           \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}