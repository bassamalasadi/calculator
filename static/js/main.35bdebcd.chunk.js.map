{"version":3,"sources":["spacef.js","App.js","index.js"],"names":["module","exports","val","isNaN","toString","trim","isNumeric","parts","split","replace","join","App","useState","value","setValue","memory","setMemory","operator","setOperator","mem","setMem","second","setSecond","lastoper","setLastoper","acChange","setAcChange","rad","setRad","toggle","Audio","mrStyle","backgroundColor","seStyle","useEffect","handleButtonPress","carrier","parseFloat","Math","log10","pow","length","includes","className","spacef","onClick","Number","style","exp","sqrt","textDecoration","cbrt","log","log2","sin","asin","PI","cos","acos","tan","atan","E","sinh","asinh","cosh","acosh","tanh","atanh","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35bdebcd.chunk.js","sourcesContent":[";(function () {\r\n    function isNumeric (val) {\r\n      if (typeof val === 'number' && !isNaN(val)) {\r\n        return true\r\n      }\r\n  \r\n      val = (val || '').toString().trim()\r\n      return val && !isNaN(val)\r\n    }\r\n  \r\n    function spacef (val) {\r\n      if (typeof val === 'undefined' || val === null) {\r\n        val = ''\r\n      }\r\n  \r\n      val = val.toString()\r\n  \r\n      if (!isNumeric(val)) {\r\n        return val\r\n      }\r\n  \r\n      var parts = val.split('.')\r\n  \r\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n      return parts.join('.')\r\n    }\r\n  \r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n      module.exports = spacef\r\n    } \r\n  })();\r\n  ","import React, {useState, useEffect} from 'react'\nimport spacef from './spacef'\nimport './App.css';\n\nfunction App() {\n  const [value , setValue] = useState(\"0\");\n  const [memory, setMemory] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [mem , setMem] = useState(null);\n  const [second, setSecond] = useState(true);\n  const [lastoper, setLastoper] = useState(false)\n  const [acChange, setAcChange] = useState(true)\n  const [rad, setRad] = useState(true)\n  const toggle = useState(new Audio('http://www.soundjay.com/button/beep-07.wav'));\n  \n  let mrStyle = {}\n  if(mem !== null){\n    mrStyle = {\n      backgroundColor: \"#666666\"\n    }\n  }\n  let seStyle = {}\n  if(!second){\n    seStyle = {\n      backgroundColor: \"#666666\"\n    }\n  }\n  useEffect(() => {\n    if(value !== '0'){\n      setAcChange(false)\n    }\n  },[value])\n  let operStyle = {}\n\n  const handleButtonPress = (carrier) => {\n\n\n    if(carrier === 'rad'){\n      setRad(!rad)\n    }\n    if(carrier === 'deg'){\n      setRad(!rad)\n    }\n    if(carrier === \"mr\"){\n      if(mem !== null){\n        setValue((mem).toString())\n        return;\n      }\n    }\n    if(carrier === \"c\"){\n      setValue(\"0\");\n      setMemory(null);\n      setOperator(null);\n      setAcChange(true)\n      return;\n    }\n\n    if (carrier === \".\") {\n      if (value.includes(\".\")) return;\n      setValue(value + \".\");\n      return;\n    }\n\n    if (carrier === \"+\" || carrier === \"−\" || carrier === \"x\" || carrier === \"÷\" || carrier === \"xy\"  || carrier === \"sqrX\" ||\n        carrier === \"EE\" || carrier === \"yx\" || carrier === \"logy\") {\n      if (operator !== null) {\n        if (operator === \"+\") {\n          setMemory(memory + parseFloat(value));\n        } else if (operator === \"−\") {\n          setMemory(memory - parseFloat(value));\n        } else if (operator === \"x\") {\n          setMemory(memory * parseFloat(value));\n        } else if (operator === \"÷\") {\n          setMemory(memory / parseFloat(value));\n        } else if (operator === \"xy\"){\n          setMemory(memory ** parseFloat(value));\n        } else if (operator === \"yx\"){\n          setMemory(parseFloat(value) ** memory)\n        } else if (operator === \"sqrX\"){\n          setMemory(memory ** (1 / parseFloat(value)));\n        } else if (operator === \"EE\"){\n          setMemory(memory * (10 ** parseFloat(value)));\n        } else if(operator === \"m+\"){\n          setMem(mem + parseFloat(value));setValue('0');\n        } else if(operator === \"m-\"){\n          setMem(mem - parseFloat(value).toString())\n        } else if(operator === \"logy\"){\n          setMemory(memory / Math.log10(parseFloat(value)))\n        }\n      } else {\n        setMemory(parseFloat(value));\n        setValue(\"0\");\n      }\n      \n      setOperator(carrier);\n      return;\n    }\n\n    if (carrier === \"=\") {\n      setLastoper(true)\n      if (!operator) return;\n      if (operator === \"+\") {\n        setValue((memory + parseFloat(value)).toString());\n      } else if (operator === \"−\") {\n        setValue((memory - parseFloat(value)).toString());\n      } else if (operator === \"x\") {\n        setValue((memory * parseFloat(value)).toString());\n      } else if (operator === \"÷\") {\n        setValue((memory / parseFloat(value)).toString());\n      } else if(operator === \"xy\"){\n        setValue((memory ** parseFloat(value)).toString())\n      } else if(operator === \"yx\"){\n        setValue((parseFloat(value) ** memory).toString())\n      } else if(operator === \"sqrX\"){\n        setValue((Math.pow(memory, (1/parseFloat(value))).toString()))\n      } else if(operator === \"EE\"){\n        setValue((memory * (10 ** parseFloat(value))).toString())\n      } else if(operator === \"logy\"){\n        setValue((Math.log10(memory) / Math.log10(parseFloat(value))).toString())\n      }else \n      setMemory(null);\n      setOperator(null);\n      return;\n    }\n    \n    if (value[value.length - 1] === \".\") {\n      setValue(value + carrier);\n    } else if((value).toString()?.includes('.')){\n      setValue((value + carrier).toString())\n    }else if(lastoper){\n      setValue(parseFloat(carrier).toString());\n      setLastoper(false)\n    }else{\n      setValue(parseFloat(value + carrier).toString());\n    }\n\n    }\n    \n  return (\n    <div className=\"App\">\n      <div className=\"calcultor\">\n        {\n          rad\n          ?''\n          :<p className=\"rad\">Rad</p>\n        }\n        <div className=\"number\">\n          <p>{spacef(value)}</p>\n        </div>\n        <div className=\"numbers\">\n\n          <div  className=\"line\">\n          <button className=\"gray2Color\" onClick={() => toggle}>(</button>    \n          <button className=\"gray2Color\" >)</button>    \n          <button className=\"gray2Color\" onClick={() => {setValue('0');setMem(null)}}>mc</button>     \n          <button className=\"gray2Color\" onClick={() => {setMem(mem + Number(value));setValue('0')}}>m+</button>       \n          <button className=\"gray2Color\" onClick={() => {setMem(mem - Number(value));setValue('0')}}>m-</button>     \n          <button className=\"gray2Color\" style={mrStyle} onClick={() => handleButtonPress('mr')}>mr</button>\n            {\n              acChange\n              ? <button className=\"grayColor\" onClick={() => handleButtonPress('AC')}>AC</button>\n              : <button className=\"grayColor\" onClick={() => handleButtonPress('c')}>C</button>\n            }\n          <button className=\"grayColor\" onClick={() => setValue((parseFloat(value) * -1).toString())}>+/-</button>      \n          <button className=\"grayColor\" onClick={() => setValue((parseFloat(value) / 100).toString())}>%</button>     \n          <button className=\"yellowColor\" style={operStyle} onClick={() => handleButtonPress('÷')}>÷</button>                           \n          </div>\n\n          <div className=\"line\">\n          <button className=\"gray2Color\" style={seStyle} onClick={() => setSecond(!second)}>2<sup>nd</sup></button>                                                    \n          <button className=\"gray2Color\" onClick={() => setValue(value ** 2)}>x<sup>2</sup></button>  \n          <button className=\"gray2Color\" onClick={() => setValue(value ** 3)}>x<sup>3</sup></button>  \n          <button className=\"gray2Color\" onClick={() => handleButtonPress('xy')}>x<sup>y</sup></button>      \n            {\n              second \n              ? (<button className=\"gray2Color\" onClick={() => setValue(Math.exp(value))}>e<sup>x</sup></button>  )\n              : (<button className=\"gray2Color\" onClick={() => handleButtonPress('yx')}>y<sup>x</sup></button>  ) \n            }\n            {\n              second \n              ? <button className=\"gray2Color\" onClick={() => setValue(10 ** value)}>10<sup>x</sup></button>\n              : <button className=\"gray2Color\" onClick={() => setValue(2 ** value)}>2<sup>x</sup></button>  \n            }\n          \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('7')}>7</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('8')}>8</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('9')}>9</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('x')}>x</button>           \n          </div>\n\n          <div className=\"line\">\n          <button className=\"gray2Color\" onClick={() => setValue(1 / value)}>1/x</button>             \n          <button className=\"gray2Color\" onClick={() => setValue(Math.sqrt(value))}><sup>2</sup> &radic;<span style={{textDecoration: \"overline\"}}>x</span></button>\n          <button className=\"gray2Color\" onClick={() => setValue(Math.cbrt(value))}><sup>3</sup> &radic;<span style={{textDecoration: \"overline\"}}>x</span></button>\n          <button className=\"gray2Color\" onClick={() => handleButtonPress('sqrX')}><sup>y</sup> &radic;<span style={{textDecoration: \"overline\"}}>x</span></button>\n          {\n            second \n            ? <button className=\"gray2Color\" onClick={() => setValue(Math.log(value))}>In</button>  \n            : <button className=\"gray2Color\" onClick={() => handleButtonPress('logy')}>log<sub>y</sub></button>    \n          }\n          {\n            second \n            ? <button className=\"gray2Color\" onClick={() => setValue(Math.log10(value))}>Iog<sub>10</sub></button>  \n            : <button className=\"gray2Color\" onClick={() => setValue(Math.log2(value))}>Iog<sub>2</sub></button>    \n          }\n          <button className=\"gray1Color\" onClick={() => handleButtonPress('4')}>4</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('5')}>5</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('6')}>6</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('−')}>−</button>           \n          </div>\n          <div className=\"line\">\n          <button className=\"gray2Color\">x!</button>        \n          {\n            second \n            ? <button className=\"gray2Color\" onClick={() => setValue(Math.sin(value))}>sin</button>   \n            : <button className=\"gray2Color\" onClick={() => setValue((Math.asin(value) * ( 180 / Math.PI)))}>sin<sup>-1</sup></button> \n          }\n          {\n            second \n            ? <button className=\"gray2Color\" onClick={() => setValue(Math.cos(value))}>cos</button>   \n            : <button className=\"gray2Color\" onClick={() => setValue((Math.acos(value) * ( 180 / Math.PI)))}>cos<sup>-1</sup></button> \n          }\n          {\n            second \n            ? <button className=\"gray2Color\" onClick={() => setValue(Math.tan(value))}>tan</button>   \n            : <button className=\"gray2Color\" onClick={() => setValue((Math.atan(value) * ( 180 / Math.PI)))}>tan<sup>-1</sup></button> \n          }                  \n          <button className=\"gray2Color\" onClick={() => setValue(Math.E)}>e</button>                  \n          <button className=\"gray2Color\" onClick={() => handleButtonPress('EE')}>EE</button>          \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('1')}>1</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('2')}>2</button>            \n          <button className=\"gray1Color\" onClick={() => handleButtonPress('3')}>3</button>            \n          <button className=\"yellowColor\" onClick={() => handleButtonPress('+')}>+</button>           \n          </div>\n\n          <div className=\"line\">\n            {\n              rad\n              ? <button className=\"gray2Color\" onClick={() => handleButtonPress('rad')}>Rad</button>\n              : <button className=\"gray2Color\" onClick={() => handleButtonPress('deg')}>Deg</button>\n            }\n            \n            {\n              second \n              ? <button className=\"gray2Color\" onClick={() => setValue(Math.sinh(value))}>sinh</button>   \n              : <button className=\"gray2Color\" onClick={() => setValue((Math.asinh(value)))}>sinh<sup>-1</sup></button>     \n            }\n            {\n              second \n              ? <button className=\"gray2Color\" onClick={() => setValue(Math.cosh(value))}>cosh</button>   \n              : <button className=\"gray2Color\" onClick={() => setValue((Math.acosh(value)))}>cosh<sup>-1</sup></button>     \n            }\n            {\n              second \n              ? <button className=\"gray2Color\" onClick={() => setValue(Math.tanh(value))}>tanh</button>   \n              : <button className=\"gray2Color\" onClick={() => setValue(Math.atanh(value))}>tanh<sup>-1</sup></button>     \n            }     \n            <button className=\"gray2Color\" onClick={() => setValue(Math.PI)}>&pi;</button>              \n            <button className=\"gray2Color\" onClick={() => setValue(Math.random())}>Rand</button>        \n            <button className=\"gray1Color zero\" onClick={() => handleButtonPress('0')}>0</button>       \n            <button className=\"gray1Color\" onClick={() => handleButtonPress('.')}>.</button>            \n            <button className=\"yellowColor\" onClick={() => handleButtonPress('=')}>=</button>           \n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}